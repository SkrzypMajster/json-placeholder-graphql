type Coordinates {
    lat: String!
    lng: String!
}

type Address {
    street: String!
    suite: String!
    city: String!
    zipcode: String!
    geo: Coordinates!
}

type Company {
    name: String!
    catchPhrase: String!
    bs: String!
}

type User {
    id: Int!
    name: String!
    username: String!
    email: String!
    address: Address!
    phone: String!
    website: String!
    company: Company!
    posts: [Post]
}

type Post {
    userId: Int!
    id: Int!
    title: String!
    body: String!
    user: User
}

# Input types for mutations
input CoordinatesInput {
    lat: String!
    lng: String!
}

input AddressInput {
    street: String!
    suite: String!
    city: String!
    zipcode: String!
    geo: CoordinatesInput!
}

input CompanyInput {
    name: String!
    catchPhrase: String!
    bs: String!
}

input UserInput {
    name: String!
    username: String!
    email: String!
    address: AddressInput!
    phone: String!
    website: String!
    company: CompanyInput!
}

input PostInput {
    userId: Int!
    title: String!
    body: String!
}

# Queries and mutations

type Query {
    users: [User!]!
    user(id: Int!): User
    posts: [Post!]!
    post(id: Int!): Post
}

type Mutation {
    addUser(user: UserInput!): User
    editUser(id: Int!, user: UserInput!): User
    removeUser(id: Int!): User
    addPost(post: PostInput!): Post
    editPost(id: Int!, post: PostInput!): Post
    removePost(id: Int!): Post
}
